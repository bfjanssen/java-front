module java/classes/EnumDeclarations

imports

  signatures/java/classes/EnumDeclarations-sig

  java/JRE
  java/classes/ClassDeclarations
  java/classes/Main
  java/expressions/Main
  java/interfaces/Annotations
  java/names/Main
  java/names/ExpressionNames
  java/names/MethodNames
  java/names/TypeNames
  java/types/ReferenceTypes


rules // 8.9. Enum Types

  enumDeclOk : scope * EnumDeclaration * scope

  enumDeclOk(s, EnumDeclComma(clsModList, id, superIntfsOpt, enumConstList, enumBodyDeclsOpt), s_staticDef) :-
    enumDeclOk(s, EnumDecl(clsModList, id, superIntfsOpt, enumConstList, enumBodyDeclsOpt), s_staticDef).

  enumDeclOk(s, EnumDecl(clsModList, id, superIntfsOpt, enumConstList, enumBodyDeclsOpt), s_staticDef) :-
  {s_enum s_enumStatic}
    clsModListOk(s, clsModList),

    new s_enum,
    s_enum -STATIC_LEX-> s,

    declareType(s_staticDef, id, s_enum, CLASS()),

    setSuperCls(s_enum, enumOk(s)),
    superIntfsOptOk(s, superIntfsOpt, s_enum),

    new s_enumStatic,
    s_enum -STATIC_MEMBERS-> s_enumStatic,

    enumConstListOk(s_enum, REF(s_enum), enumConstList, s_enumStatic),

    enumBodyDeclsOptOk(s_enum, enumBodyDeclsOpt, s_enum, s_enumStatic).


  enumConstOk : scope * TYPE * EnumConstant * scope
  enumConstListOk maps enumConstOk(*, *, list(*), *)

  enumConstOk(s, T, EnumConst(annoList, id, enumConstArgsOpt, clsBodyDeclList), s_staticDef) :-
  {s_const s_constStatic}
    annoListOk(s, annoList),

    declareExprName(s_staticDef, id, REF(s_const)),

    new s_const,
    s_const -STATIC_LEX-> s,

    initTypeScope(s_const, id, CLASS()),

    setSuperCls(s_const, T),

    new s_constStatic,
    s_const -STATIC_MEMBERS-> s_constStatic,

    enumConstArgsOptOk(s, enumConstArgsOpt),

    clsBodyDeclListOk(s_const, clsBodyDeclList, s_const, s_constStatic).

  enumConstOk(s, T, EnumConstNoBody(annoList, id, enumConstArgsOpt), s_staticDef) :-
    enumConstOk(s, T, EnumConst(annoList, id, enumConstArgsOpt, []), s_staticDef).


  enumConstArgsOptOk : scope * list(EnumConstantArgs)

  enumConstArgsOptOk(s, []) :-
    _ == resolveDirectMemberMthdName(s, Id("<init>"), []).

  enumConstArgsOptOk(s, [EnumConstArgs(exprList)]) :-
  {Ts}
    Ts == exprListOk(s, exprList),
    _ == resolveDirectMemberMthdName(s, Id("<init>"), Ts).


  enumBodyDeclsOk : scope * EnumBodyDeclarations * scope * scope
  enumBodyDeclsOptOk maps enumBodyDeclsOk(*, list(*), *, *)

  enumBodyDeclsOk(s, EnumBodyDecs(clsBodyDeclList), s_def, s_staticDef) :-
    clsBodyDeclListOk(s, clsBodyDeclList, s_def, s_staticDef).

