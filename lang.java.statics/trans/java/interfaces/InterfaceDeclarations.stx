module java/interfaces/InterfaceDeclarations

imports

  signatures/java/interfaces/InterfaceDeclarations-sig

  java/JRE
  java/classes/ClassDeclarations
  java/interfaces/Annotations
  java/interfaces/AnnotationTypes
  java/interfaces/ConstantDeclarations
  java/interfaces/Main
  java/interfaces/InterfaceMethodDeclarations
  java/names/Main
  java/names/TypeNames
  java/types/ReferenceTypes
  java/util/Boolean


rules // 9.1. Interface Declarations

  intfDeclOk : scope * InterfaceDeclaration * scope

  intfDeclOk(s, NormalInterface(intfModList, id, typeParamsOpt, extendsIntfsOpt, intfMemDeclList), s_def) :-
  {s_intf s_intfStatic s_typeParams}
    intfModListOk(s, intfModList),

    new s_intf,
    declareType(s_def, id, s_intf, INTF()),
    // FIXME noDuplicateType
    // FIXME noEnclosingTypeSameName
    // FIXME noExtendsCycle

    new s_intfStatic,
    s_intf -STATIC_MEMBERS-> s_intfStatic,

    s_typeParams == typeParamsOptOk(s, typeParamsOpt),
    addLexical(s_intf, hasStaticIntfMod(intfModList), s_typeParams),

    extendsIntfsOptOk(s_typeParams, extendsIntfsOpt, s_intf),

    intfMemDeclListOk(s_intf, intfMemDeclList),
    true.

  intfDeclOk(s, AnnotationTypeDeclaration2InterfaceDeclaration(annoTypeDecl), s_def) :-
    annoTypeDeclOk(s, annoTypeDecl, s_def),
    true.


  intfModOk : scope * InterfaceModifier
  intfModListOk maps intfModOk(*, list(*))

  intfModOk(s, Annotation2InterfaceModifier(anno)) :-
    annoOk(s, anno),
    true.
  intfModOk(s, Public2InterfaceModifier(_)) :- true.
  intfModOk(s, Protected2InterfaceModifier(_)) :- true.
  intfModOk(s, Private2InterfaceModifier(_)) :- true.
  intfModOk(s, Abstract2InterfaceModifier(_)) :- true.
  intfModOk(s, Static2InterfaceModifier(_)) :- true.
  intfModOk(s, Strictfp2InterfaceModifier(_)) :- true.


  hasStaticIntfMod : list(InterfaceModifier) -> B

  hasStaticIntfMod([Static2InterfaceModifier(_)|_]) = T().
  hasStaticIntfMod([_|intfModList]) = hasStaticIntfMod(intfModList).
  hasStaticIntfMod([]) = F().


  extendsIntfsOptOk : scope * list(ExtendsInterfaces) * scope

  extendsIntfsOptOk(s, [], s_intf) :-
    setSuperCls(s_intf, objectOk(s)),
    true.

  extendsIntfsOptOk(s, [extendsIntfs], s_intf) :-
    extendsIntfsOk(s, extendsIntfs, s_intf).

  extendsIntfsOk : scope * ExtendsInterfaces * scope

  extendsIntfsOk(s, ExtendsInterfaces(clsTypeList), s_intf) :-
  {Ts}
    Ts == clsTypeListOk(s, clsTypeList),
    addSuperIntfList(s_intf, Ts).


  intfMemDeclOk : scope * InterfaceMemberDeclaration
  intfMemDeclListOk maps intfMemDeclOk(*, list(*))

  intfMemDeclOk(s, ConstantDeclaration2InterfaceMemberDeclaration(constDecl)) :-
    constDeclOk(s, constDecl),
    true.

  intfMemDeclOk(s, InterfaceMethodDeclaration2InterfaceMemberDeclaration(intfMthdDecl)) :-
    intfMthdDeclOk(s, intfMthdDecl),
    true.

  intfMemDeclOk(s, ClassDeclaration2InterfaceMemberDeclaration(clsDecl)) :-
    clsDeclOk(s, clsDecl, s),
    true.

  intfMemDeclOk(s, InterfaceDeclaration2InterfaceMemberDeclaration(intfDecl)) :-
    intfDeclOk(s, intfDecl, s),
    true.

  intfMemDeclOk(s, SemiColon2InterfaceMemberDeclaration(_)) :-
    true.


