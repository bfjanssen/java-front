module java/types/Subtyping

imports

  java/names/Main
  java/types/Main


// 4.10 Subtyping

rules

  subType : TYPE * TYPE
  subTypeList maps subType(list(*), list(*))

  subType(T, U) :- superType(U, T) | error $[[T] not a subtype of [U]].


  superType : TYPE * TYPE
  superTypeList maps superType(list(*), list(*))

  superType(T, T).


  superType(REF(s_T), U) :- superTypeREF(s_T, U).

    superTypeREF : scope * TYPE

    superTypeREF(_, NULL()).

    superTypeREF(s_T, REF(s_U)) :-
    {ps}
      query () filter (EXT|IMPL)* and { s_ty :- s_ty == s_T } in s_U |-> ps,
      superTypeREF1(ps).

        superTypeREF1 : list((path * scope))
        superTypeREF1([]) :- false.
        superTypeREF1(ps) :- true.


  superType(DOUBLE(), U) :- superTypeDOUBLE(U).

    superTypeDOUBLE : TYPE

    superTypeDOUBLE(FLOAT()).
    superTypeDOUBLE(LONG()).
    superTypeDOUBLE(INT()).
    superTypeDOUBLE(CHAR()).
    superTypeDOUBLE(SHORT()).
    superTypeDOUBLE(BYTE()).


  superType(FLOAT(), U) :- superTypeFLOAT(U).

    superTypeFLOAT : TYPE

    superTypeFLOAT(LONG()).
    superTypeFLOAT(INT()).
    superTypeFLOAT(CHAR()).
    superTypeFLOAT(SHORT()).
    superTypeFLOAT(BYTE()).


  superType(LONG(), U) :- superTypeLONG(U).

    superTypeLONG : TYPE

    superTypeLONG(INT()).
    superTypeLONG(CHAR()).
    superTypeLONG(SHORT()).
    superTypeLONG(BYTE()).


  superType(INT(), U) :- superTypeINT(U).

    superTypeINT : TYPE

    superTypeINT(CHAR()).
    superTypeINT(SHORT()).
    superTypeINT(BYTE()).


  superType(SHORT(), U) :- superTypeSHORT(U).

    superTypeSHORT : TYPE

    superTypeSHORT(BYTE()).


